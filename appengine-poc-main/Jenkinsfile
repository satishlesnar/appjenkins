pipeline {
    agent any

    environment {
        PROJECT_ID = 'sodium-ceremony-449007-j6'
        GOOGLE_APPLICATION_CREDENTIALS = credentials('gcp-service-account')  // Service account credential
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/satishlesnar/appjenkins.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Install Python and Poetry without sudo
                    sh '''
                    curl -sS https://install.python-poetry.org | python3 -
                    export PATH="$HOME/.local/bin:$PATH"

                    # Ensure pip is available
                    python3 -m ensurepip --upgrade
                    pip install --upgrade pip

                    # Install dependencies using poetry (for handling requirements)
                    poetry install
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run your tests here using Poetry
                    sh '''
                    # Activate the poetry environment and run tests
                    poetry run pytest
                    '''
                }
            }
        }

        stage('Deploy to Google App Engine') {
            steps {
                script {
                    // Authenticate with Google Cloud using the service account
                    sh '''
                    gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
                    gcloud config set project $PROJECT_ID

                    # Deploy to Google App Engine
                    gcloud app deploy --quiet
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            // Optional: Clean up after the pipeline (e.g., remove temporary files, clean workspace)
        }

        success {
            echo 'Deployment successful!'
        }

        failure {
            echo 'Deployment failed!'
        }
    }
}

pipeline {
    agent any

    parameters {
        string(name: 'serverIP', defaultValue: 'None', description: 'Enter target Host IP ')
        string(name: 'targetHost', defaultValue: 'None', description: 'Enter target host for deployment ')
        string(name: 'dockerUser', defaultValue: 'None', description: 'Enter Docker user name ')
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
    }

    stages {
        stage('SCM checkout') {
            steps {
                git credentialsId: 'github-creds', url: 'https://github.com/satishlesnar/appjenkins.git', branch: 'main'
            }
        }

        stage('Build deployment image') {
            steps {
                sh "sudo docker build /home/ubuntu/jenkins/workspace/${JOB_NAME} -t ${dockerUser}/devopsdemo --no-cache"
            }
        }

        stage('Push Image') {
            steps {
                script {
                    if (dockerUser != 'None') {
                        sh "echo $DOCKERHUB_CREDENTIALS_PSW | sudo docker login --username ${dockerUser} --password-stdin"
                        sh "sudo docker push ${dockerUser}/devopsdemo:latest"
                    } else {
                        error "Docker username not provided."
                    }
                }
            }
        }

        stage('Delete old and Deploy new version on website') {
            steps {
                sh '''
                    sudo docker run -tid -p 81:80 ${dockerUser}/devopsdemo:latest
                    sudo docker run -tid -p 82:80 ${dockerUser}/devopsdemo:latest
                    sudo docker run -tid -p 83:80 ${dockerUser}/devopsdemo:latest
                '''
            }
        }

        stage('Test the website') {
            steps {
                test_web(ports, serverIP)
            }
        }
    }
}

def test_web(ports, serverIP) {
    script {
        ports.each { entry ->
            sh "curl -I http://${serverIP}:${entry}"
        }
    }
}
